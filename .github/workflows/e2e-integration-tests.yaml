name: E2E Integration Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
      - develop

jobs:
  trigger:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo_name: ["atlan-postgres-app"] # List of repositories to run the tests

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Get the application-sdk commit SHA
        run: |
          if [ "${{ github.event.pull_request.head.sha }}" ]; then
            echo "distinct_id=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            echo "distinct_id=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Trigger E2E Integrations Tests
        uses: codex-/return-dispatch@v2
        id: return_dispatch
        with:
          token: "${{ secrets.ORG_PAT_GITHUB }}"
          ref: "refs/heads/develop"
          repo: ${{ matrix.repo_name }}
          owner: "atlanhq"
          workflow: "e2e-integration-test.yaml"
          workflow_timeout_seconds: 120
          workflow_job_steps_retry_seconds: 10
          distinct_id: "${{ env.distinct_id }}"

      - name: Check the test logs using the below run URL
        run: |
          echo ${{steps.return_dispatch.outputs.run_id}}
          echo ${{steps.return_dispatch.outputs.run_url}}

      - name: Check Workflow Status
        run: |
          repo_owner="atlanhq"
          repo_name="${{ matrix.repo_name }}"
          run_id="${{steps.return_dispatch.outputs.run_id}}"

          echo "Checking status of workflow run $run_id in $repo_name"

          status="in_progress"
          start_time=$(date +%s)
          timeout=180
          while [[ "$status" == "in_progress" || "$status" == "queued" ]]; do
            sleep 10
            response=$(curl -s -H "Authorization: Bearer ${{ secrets.ORG_PAT_GITHUB }}" \
              https://api.github.com/repos/$repo_owner/$repo_name/actions/runs/$run_id)
            status=$(echo $response | jq -r '.status')
            conclusion=$(echo $response | jq -r '.conclusion')

            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))

            if [[ $elapsed_time -ge $timeout ]]; then
              echo "Workflow run timeout reached after $timeout seconds"
              exit 1
            fi
          done

          if [[ "$conclusion" != "success" ]]; then
            echo "Workflow run $run_id in $repo_name failed with conclusion $conclusion"
            exit 1
          else
            echo "Workflow run $run_id in $repo_name succeeded"
          fi