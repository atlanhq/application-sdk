# This is a github action that runs scale tests for your application
# Ideally a run.py script is added to the application (see step: Run container tests) that can be used
# 1. Generate scale data
# 2. Run the scale tests
# 3. Post the results to the pull request comment
# This leverages the scale data generator and test containers to run the scale tests

name: Scale Tests

on:
  workflow_call:
    secrets:
      ORG_PAT_GITHUB:
        required: true
  pull_request:
    types: [ opened, synchronize, labeled ]
    branches:
      - main
      - develop
    paths:
      - '**'
      - '!**.md'
      - '!images/**'
      - '!**.png'

jobs:
  test:
    if: ((github.event.action == 'labeled' && github.event.label.name == 'scale-test') || contains(github.event.pull_request.labels.*.name, 'scale-test'))
    runs-on: "ubuntu-24.04"
    timeout-minutes: 20

    steps:
      # check if this is still needed
      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 host.docker.internal" | sudo tee -a /etc/hosts

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install testcontainers poetry psutil

      - name: Install Dependencies
        run: |
          git config --global url."https://${{ secrets.ORG_PAT_GITHUB }}@github.com/".insteadOf "git@github.com:"
          # Configure poetry to use project-specific virtualenv
          poetry config virtualenvs.in-project true

          # Install the dependencies
          poetry install -vv
          poetry update application-sdk --dry-run

      # Install Dapr
      - name: Install Dapr CLI
        run: |
          wget -q https://raw.githubusercontent.com/dapr/cli/master/install/install.sh -O - | /bin/bash
          dapr init --runtime-version 1.13.6 --slim

      # Install Temporal
      - name: Install Temporal CLI and Start Server
        run: |
          curl -sSf https://temporal.download/cli.sh | sh
          export PATH="$HOME/.temporalio/bin:$PATH"
          temporal server start-dev --ip 0.0.0.0 --db-filename /tmp/temporal.db &
          sleep 10  # Give some time for Temporal to start

      # Start dapr and temporal services
      - name: Start Platform Services
        run: |
          make start-deps
          sleep 10  # Give services time to start up

      - name: Build docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: test-sample:latest
          secrets: |
            PRIVATE_REPO_ACCESS_TOKEN=${{ secrets.ORG_PAT_GITHUB }}
          network: host

      - name: Run container tests
        run: |
          # Add debug information to verify service accessibility
          nc -zv 172.17.0.1 7233 || echo "Temporal port not accessible"
          nc -zv 172.17.0.1 3500 || echo "Dapr HTTP port not accessible"
          nc -zv 172.17.0.1 50001 || echo "Dapr gRPC port not accessible"

          # Run the scale test
          python tests/scale/run.py --output-file scale_test_metrics.md
        env:
          # Pass any required environment variables for the test
          DOCKER_HOST: "unix:///var/run/docker.sock"
          PYTHONPATH: ${{ github.workspace }}

      - name: Comment workflow status on Pull Request
        if: ${{ github.event_name == 'pull_request' }}
        uses: mshick/add-pr-comment@v2
        with:
          message-id: 'scale_test_status'
          message-path: scale_test_metrics.md
