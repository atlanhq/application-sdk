name: Workflow Setup
description: A reusable action for setting up workflow test environment
inputs:
runs:
  using: "composite"
steps:
    - uses: actions/checkout@v3

    # Install Dapr
    - name: Install Dapr CLI
      run: |
        wget -q https://raw.githubusercontent.com/dapr/cli/master/install/install.sh -O - | /bin/bash
        dapr init --runtime-version 1.13.6 --slim

    # Install Temporal
    - name: Install Temporal CLI and Start Server
      run: |
        curl -sSf https://temporal.download/cli.sh | sh
        export PATH="$HOME/.temporalio/bin:$PATH"
        temporal server start-dev --db-filename /tmp/temporal.db &
        sleep 10  # Give some time for Temporal to start

    - name: Set up Python 3.11
      uses: actions/setup-python@v1
      with:
        python-version: "3.11"

    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.5
        virtualenvs-create: true
        virtualenvs-in-project: true
        virtualenvs-path: .venv
        installer-parallel: true

    #----------------------------------------------
    #       set up system git client for poetry
    #       known to be available only in poetry 1.8.5
    #----------------------------------------------
    - name: Set up system git client for poetry
      run: |
        poetry config experimental.system-git-client true

    - name: Install Dependencies
      run: |
        git config --global url."https://${{ secrets.ORG_PAT_GITHUB }}@github.com/".insteadOf "git@github.com:"
        # Configure poetry to use project-specific virtualenv
        poetry config virtualenvs.in-project true

        # Install the dependencies
        poetry install -vv
        poetry update application-sdk --dry-run

    # Start dapr and temporal services
    - name: Start Platform Services
      run: |
        make start-deps
        sleep 10  # Give services time to start up

    # Start the application
    - name: Start the application
      run: |
        make run-app &
        sleep 10  # Give the app time to start