[tool.poetry]
name = "application-sdk"
version = "0.1.0"
description = ""
authors = ["Nishchith Shetty <inishchith@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi-sqlalchemy = "^0.2.1"
alembic = "^1.13.3"
opentelemetry-distro = "^0.48b0"
opentelemetry-exporter-otlp = "^1.27.0"
opentelemetry-instrumentation-fastapi = "^0.48b0"
opentelemetry-proto = "^1.27.0"
psutil = "^6.0.0"
fastapi = {extras = ["standard"], version = "^0.115.0"}
aiofiles = "^24.1.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
pyatlan = "^2.6.1"
orjson = "^3.10.7"
pyarrow = "^17.0.0"
dapr = {version = "^1.14.0", optional = true}
temporalio = {version = "^1.7.1", optional = true}
dash = {version = "^2.18.1", optional = true}
pandas = {version = "^2.2.3", optional = true}
dash-ag-grid = {version = "^31.2.0", optional = true}
dash-bootstrap-components = {version = "^1.6.0", optional = true}
pygwalker = {version = "^0.4.9.10", optional = true}
dash-dangerously-set-inner-html = {version = "^0.0.2", optional = true}
getdaft = {extras = ["sql"], version = "^0.3.15"}
pyiceberg = "^0.8.1"

[tool.poetry.extras]
workflows = [
    "dapr",
    "temporalio"
]
dashboard = [
    "dash",
    "pandas",
    "dash-ag-grid",
    "dash-bootstrap-components",
    "pygwalker",
    "dash-dangerously-set-inner-html"
]


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
isort = "^5.13.2"

[tool.poetry.group.test.dependencies]
mock = "^5.1.0"
pytest = "^8.3.3"
coverage = "^7.6.1"
pytest-asyncio = "^0.24.0"
hypothesis = "^6.114.0"

[tool.poetry.group.examples.dependencies]
snowflake-sqlalchemy = "^1.7.0"
psycopg = {extras = ["binary"], version = "^3.2.3"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "strict"

[tool.pytest.ini_options]
asyncio_mode = "auto"
