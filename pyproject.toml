[tool.poetry]
name = "application-sdk"
version = "0.1.0"
description = "Python Application SDK is a Python library for developing applications on the Atlan Platform"
authors = ["Atlan App Team <apps@atlan.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi-sqlalchemy = "^0.2.1"
alembic = "^1.13.3"
opentelemetry-distro = "^0.50b0"
opentelemetry-exporter-otlp = "^1.29.0"
opentelemetry-instrumentation-fastapi = "^0.50b0"
opentelemetry-exporter-prometheus = "^0.50b0"
opentelemetry-proto = "^1.29.0"
psutil = "^6.0.0"
fastapi = {extras = ["standard"], version = "^0.115.0"}
aiofiles = "^24.1.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
pyatlan = "4.1.0"
orjson = "^3.10.7"
pyarrow = "^17.0.0"
dapr = {version = "^1.14.0", optional = true}
temporalio = {version = "^1.7.1", optional = true}
pandas = {version = "^2.2.3", optional = true}
pygwalker = {version = "^0.4.9.10", optional = true}
getdaft = {extras = ["sql"], version = "^0.3.15", optional = true}
pyyaml = {version = "^6.0", optional = true}
faker = {version = "^8.0.0", optional = true}
numpy = {version = ">=1.23.5,<2.0.0", optional = true}
duckdb = {version = "^1.1.3", optional = true}
duckdb-engine = {version = "^0.14.0", optional = true}
pyiceberg = {version = "^0.8.1", optional = true}
boto3 = "^1.31.3"
boto3-stubs = "^1.31.3"
starlette-context = "^0.3.6"

[tool.poetry.extras]
workflows = [
    "dapr",
    "temporalio",
    "pandas",
]
daft = [
    "getdaft"
]
scale_data_generator = [
    "pyyaml",
    "pandas",
    "pyarrow",
    "faker",
    "numpy",
    "duckdb",
    "duckdb-engine"
]
iceberg = [
    "pyiceberg"
]


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
isort = "^5.13.2"
sphinx = "^8.1.3"
pydata-sphinx-theme = "^0.16.0"
myst-parser = "^4.0.0"
pylint = "^3.3.3"
graphviz = "^0.20.3"
interrogate = "^1.7.0"

[tool.poetry.group.test.dependencies]
mock = "^5.1.0"
pytest = "^8.3.3"
coverage = "^7.6.1"
pytest-asyncio = "^0.24.0"
hypothesis = "^6.114.0"


[tool.poetry.group.examples.dependencies]
snowflake-sqlalchemy = "^1.7.0"
psycopg = {extras = ["binary"], version = "^3.2.3"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "strict"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.interrogate]
fail-under = 65