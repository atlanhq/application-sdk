apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-sync-sa
  namespace: {{ .Values.temporal.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-sync-role
  namespace: {{ .Values.temporal.persistence.postgresClusterNamespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-sync-rolebinding
  namespace: {{ .Values.temporal.persistence.postgresClusterNamespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-sync-role
subjects:
  - kind: ServiceAccount
    name: secret-sync-sa
    namespace: {{ .Values.temporal.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-sync-role
  namespace: {{ .Values.temporal.namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-sync-rolebinding
  namespace: {{ .Values.temporal.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-sync-role
subjects:
  - kind: ServiceAccount
    name: secret-sync-sa
    namespace: {{ .Values.temporal.namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sync-postgres-secret
  namespace: {{ .Values.temporal.namespace }}
spec:
  template:
    spec:
      serviceAccountName: secret-sync-sa
      containers:
      - name: sync-secret
        image: bitnami/kubectl:latest
        env:
        - name: TEMPORAL_CLUSTER_NAMESPACE
          value: {{ .Values.temporal.namespace }}
        - name: POSTGRES_NAMESPACE
          value: {{ .Values.temporal.persistence.postgresClusterNamespace }}
        command:
          - /bin/sh
          - -c
          - |
            # Use the specified namespace for secret retrieval
            echo "Using PostgreSQL namespace: $POSTGRES_NAMESPACE"

            # Sync secret to Temporal namespace
            kubectl get secret postgres-cluster-app -n $POSTGRES_NAMESPACE -o yaml \
            | sed "s/name: postgres-cluster-app/name: postgres-creds/" \
            | sed "s/namespace: $POSTGRES_NAMESPACE/namespace: $TEMPORAL_CLUSTER_NAMESPACE/" \
            | sed '/creationTimestamp/d' \
            | sed '/resourceVersion/d' \
            | sed '/ownerReferences:/,+4d' \
            | sed '/uid/d' \
            | kubectl apply -f -
      restartPolicy: OnFailure
