apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-sync-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-sync-role
rules:
  - apiGroups: ["*"]
    resources: ["secrets"]
    verbs: ["get", "list", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["create", "delete", "get", "list", "update", "patch", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-sync-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-sync-role
subjects:
  - kind: ServiceAccount
    name: secret-sync-sa
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sync-postgres-secret
  namespace: default
spec:
  template:
    spec:
      serviceAccountName: secret-sync-sa
      containers:
      - name: sync-secret
        image: bitnami/kubectl:latest
        command:
          - /bin/sh
          - -c
          - |
            apt-get update
            apt-get install -y openssl
            # Generate random passwords for superuser and dapr_admin
            SUPERUSER_PASSWORD=$( openssl rand -hex 16)
            DAPR_ADMIN_PASSWORD=$( openssl rand -hex 16)

            # Sync secret to Temporal namespace
            kubectl get secret postgres-cluster-app -n postgres -o yaml \
            | sed "s/namespace: postgres/namespace: temporal/" \
            | sed '/creationTimestamp/d' \
            | sed '/resourceVersion/d' \
            | sed '/ownerReferences:/,+4d' \
            | sed '/uid/d' \
            | kubectl apply -f -

            # Create superuser secret in postgres namespaces
            kubectl create secret generic postgres-superuser \
              --from-literal=password=$SUPERUSER_PASSWORD \
              -n postgres --dry-run=client -o yaml | kubectl apply -f -

            # Generate the Dapr connection string
            POSTGRES_HOST="postgres-cluster-rw.postgres.svc.cluster.local"
            POSTGRES_PORT="5432"
            DATABASE_NAME="dapr"
            CONNECTION_STRING="postgresql://dapr_admin:$DAPR_ADMIN_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$DATABASE_NAME"

            # Create a secret for the Dapr connection string in the 'dapr' namespace
            kubectl create secret generic dapr-pg-connection-string \
              --from-literal=connection-string="$CONNECTION_STRING" \
              -n dapr --dry-run=client -o yaml | kubectl apply -f -

            # sleep for 60 seconds to allow the postgres cluster to be ready
            sleep 60

            # Create dapr_admin user and set as owner of dapr database
            kubectl run postgres-client --rm -i --restart='Never' --image bitnami/postgresql:16 --namespace=postgres -- \
              env PGPASSWORD=$SUPERUSER_PASSWORD psql -U postgres -h postgres-cluster-rw -c "CREATE USER dapr_admin WITH PASSWORD '$DAPR_ADMIN_PASSWORD';"

            kubectl run postgres-client --rm -i --restart='Never' --image bitnami/postgresql:16 --namespace=postgres -- \
              env PGPASSWORD=$SUPERUSER_PASSWORD psql -U postgres -h postgres-cluster-rw -c "GRANT ALL PRIVILEGES ON DATABASE dapr TO dapr_admin;"
      restartPolicy: OnFailure
